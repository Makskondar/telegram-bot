import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
import logging

TOKEN = "7708977377:AAEy06Al4HcL2S8LNMg3rftgtMc8yLg5zck"
MANAGER_ID = "6315067806"  # ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞, –∫—É–¥–∏ –±—É–¥—É—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
class OrderState(StatesGroup):
    full_name = State()
    phone = State()
    city = State()
    post_office = State()

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõí –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="order")],
    [InlineKeyboardButton(text="üí¨ –ó–∞–¥–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è", url=f"https://t.me/manager_smartonline")]
])

# –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Å—Ç–∞—Ä—Ç
@dp.message(Command("start"))
async def start(message: types.Message):
    text = (
        "üî• **–í—ñ—Ç–∞—é! –î—è–∫—É—î–º–æ, —â–æ –ø–µ—Ä–µ–π—à–ª–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º.** üî•\n\n"
        "üßº **–ü–∞—Ä–æ–æ—á–∏—Å–Ω–∏–∫**\n\n"
        "üåç –í–∏—Ä–æ–±–Ω–∏–∫: –ü–æ–ª—å—â–∞\n"
        "üõ° –ì–∞—Ä–∞–Ω—Ç—ñ—è: 12 –º—ñ—Å—è—Ü—ñ–≤\n"
        "üí∞ **–¶—ñ–Ω–∞: 1699 –≥—Ä–Ω**\n\n"
        "üìå **–¢–µ—Ö–Ω—ñ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n"
        "‚úÖ –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ø–∞—Ä–∏: –¥–æ 44 –≥/—Ö–≤\n"
        "‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–∞—Ä–∏: –¥–æ 120 ¬∞C\n"
        "‚úÖ –†–æ–±–æ—á–∏–π —Ç–∏—Å–∫: 3.5 –±–∞—Ä–∞\n"
        "‚úÖ –ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å: 2000 –í—Ç (–Ω–æ–º—ñ–Ω–∞–ª—å–Ω–∞ 1200 –í—Ç)\n"
        "‚úÖ –ú—ñ—Å—Ç–∫—ñ—Å—Ç—å –±–∞–∫–∞: 450 –º–ª\n"
        "‚úÖ –î–æ–≤–∂–∏–Ω–∞ —à–Ω—É—Ä–∞: 2.78 –º\n"
        "‚úÖ –†–æ–∑–º—ñ—Ä–∏: 31 x 14.5 x 22.2 —Å–º\n\n"
        "üéØ **–Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è:**\n"
        "‚úîÔ∏è –ü—ñ–¥–ª–æ–≥–∞ —Ç–∞ –Ω–∞—Å—Ç—ñ–Ω–Ω–∞ –ø–ª–∏—Ç–∫–∞\n"
        "‚úîÔ∏è –í—ñ–∫–Ω–∞\n"
        "‚úîÔ∏è –¢–µ–∫—Å—Ç–∏–ª—å–Ω—ñ –º–µ–±–ª—ñ\n"
        "‚úîÔ∏è –ü–ª–∞—Å—Ç–∏–∫–æ–≤—ñ –º–µ–±–ª—ñ\n"
        "‚úîÔ∏è –ú–∞—Ç—Ä–∞—Ü–∏ (–∑–Ω–∏—â—É—î –¥–æ 80% –∫–ª—ñ—â—ñ–≤)\n\n"
        "üì¶ **–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü—ñ—è:**\n"
        "üîπ –ú–µ—Ç–∞–ª–µ–≤–∞ —â—ñ—Ç–∫–∞\n"
        "üîπ –ù–µ–π–ª–æ–Ω–æ–≤–∞ —â—ñ—Ç–∫–∞\n"
        "üîπ –ì–Ω—É—á–∫–∏–π —à–ª–∞–Ω–≥\n"
        "üîπ 3x –ø–æ–¥–æ–≤–∂—É–≤–∞—á—ñ (33 —Å–º)\n"
        "üîπ –í–µ–ª–∏–∫–∞ –Ω–∞—Å–∞–¥–∫–∞, –ø–ª–æ—Å–∫–∏–π –ø–µ–Ω–∑–µ–ª—å\n"
        "üîπ –©—ñ—Ç–∫–∞ –¥–ª—è –ø—ñ–¥–ª–æ–≥–∏ + —Ç–∫–∞–Ω–∏–Ω–∏ –¥–ª—è –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è\n\n"
        "üëâ –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:"
    )

    await message.answer(text, reply_markup=keyboard, parse_mode="Markdown")

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
@dp.callback_query(lambda c: c.data == "order")
async def process_order(callback_query: types.CallbackQuery, state: FSMContext):
    await callback_query.message.answer("‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ **–ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è**:")
    await state.set_state(OrderState.full_name)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä—ñ–∑–≤–∏—â–∞ —Ç–∞ —ñ–º–µ–Ω—ñ
@dp.message(StateFilter(OrderState.full_name))
async def get_full_name(message: types.Message, state: FSMContext):
    await state.update_data(full_name=message.text)
    await message.answer("üìû –í–≤–µ–¥—ñ—Ç—å –≤–∞—à **–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É**:")
    await state.set_state(OrderState.phone)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
@dp.message(StateFilter(OrderState.phone))
async def get_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer("üèô –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ **–º—ñ—Å—Ç–æ**:")
    await state.set_state(OrderState.city)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –º—ñ—Å—Ç–∞
@dp.message(StateFilter(OrderState.city))
async def get_city(message: types.Message, state: FSMContext):
    await state.update_data(city=message.text)
    await message.answer("üì¶ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä **–≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏**:")
    await state.set_state(OrderState.post_office)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä—É
@dp.message(StateFilter(OrderState.post_office))
async def get_post_office(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    
    order_text = (
        "üõç **–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!**\n\n"
        f"üë§ **–Ü–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:** {user_data['full_name']}\n"
        f"üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** {user_data['phone']}\n"
        f"üèô **–ú—ñ—Å—Ç–æ:** {user_data['city']}\n"
        f"üì¶ **–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏:** {message.text}\n\n"
        "üìå **–¢–æ–≤–∞—Ä:** –ü–∞—Ä–æ–æ—á–∏—Å–Ω–∏–∫ Adler AD 7038\n"
        "üí∞ **–¶—ñ–Ω–∞:** 1699 –≥—Ä–Ω\n\n"
        "üîî –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±—Ä–æ–±—ñ—Ç—å —Ü–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
    )

    # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä—É
    await bot.send_message(MANAGER_ID, order_text, parse_mode="Markdown")

    await message.answer("‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–µ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏.")
    await state.clear()

# –ì–æ–ª–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())
